{
  "address": "0xd58e1Ed9f18Da9dD1fAf3E23FFf883b94c80c935",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_v2DataProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_v3AddressesProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wnative",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "V2_ADDRESSES_PROVIDER",
      "outputs": [
        {
          "internalType": "contract ILendingPoolAddressesProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "V2_DATA_PROVIDER",
      "outputs": [
        {
          "internalType": "contract IAaveProtocolDataProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "V2_LENDING_POOL",
      "outputs": [
        {
          "internalType": "contract ILendingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "V3_ADDRESSES_PROVIDER",
      "outputs": [
        {
          "internalType": "contract IPoolAddressesProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "V3_DATA_PROVIDER",
      "outputs": [
        {
          "internalType": "contract IPoolDataProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "V3_POOL",
      "outputs": [
        {
          "internalType": "contract IPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WNATIVE",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aWNATIVE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approvePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRateMode",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRateMode",
          "type": "uint256"
        }
      ],
      "name": "borrowETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRateMode",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitDeadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "permitS",
          "type": "bytes32"
        }
      ],
      "name": "borrowETHWithPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRateMode",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitDeadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "permitS",
          "type": "bytes32"
        }
      ],
      "name": "borrowWithPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllReservesTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum VERSION",
              "name": "version",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "internalType": "struct TokenDataEx[]",
          "name": "tokens",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_biconomy",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRateMode",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "repayAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "repayInterestRateMode",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "withdrawalAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        }
      ],
      "name": "repayAndWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "repayAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "repayInterestRateMode",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        }
      ],
      "name": "repayAndWithdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "repayAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "repayInterestRateMode",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitDeadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "permitS",
          "type": "bytes32"
        }
      ],
      "name": "repayAndWithdrawETHWithPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "repayAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "repayInterestRateMode",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "withdrawalAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitDeadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "permitS",
          "type": "bytes32"
        }
      ],
      "name": "repayAndWithdrawWithPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRateMode",
          "type": "uint256"
        }
      ],
      "name": "repayETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "repayInterestRateMode",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "withdrawalAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        }
      ],
      "name": "repayETHAndWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "repayInterestRateMode",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "withdrawalAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitDeadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "permitS",
          "type": "bytes32"
        }
      ],
      "name": "repayETHAndWithdrawWithPermit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_biconomy",
          "type": "address"
        }
      ],
      "name": "setBiconomy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "supply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "supplyAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "supplyAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "borrowAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowInterestRateMode",
          "type": "uint256"
        }
      ],
      "name": "supplyAndBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "supplyAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "supplyAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowInterestRateMode",
          "type": "uint256"
        }
      ],
      "name": "supplyAndBorrowETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "supplyAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "supplyAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowInterestRateMode",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitDeadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "permitS",
          "type": "bytes32"
        }
      ],
      "name": "supplyAndBorrowETHWithPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "supplyAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "supplyAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "borrowAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowInterestRateMode",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitDeadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "permitS",
          "type": "bytes32"
        }
      ],
      "name": "supplyAndBorrowWithPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        }
      ],
      "name": "supplyETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "borrowAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowInterestRateMode",
          "type": "uint256"
        }
      ],
      "name": "supplyETHAndBorrow",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrowAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowInterestRateMode",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitDeadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "permitS",
          "type": "bytes32"
        }
      ],
      "name": "supplyETHAndBorrowWithPermit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitDeadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "permitS",
          "type": "bytes32"
        }
      ],
      "name": "withdrawETHWithPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "permitDeadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "permitS",
          "type": "bytes32"
        }
      ],
      "name": "withdrawWithPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6ea9189231f675ea0d011602a6b47b6d7a79874a6beca57846be4ecdc796a832",
  "receipt": {
    "to": null,
    "from": "0xd91Fbc9b431464D737E1BC4e76900D43405a639b",
    "contractAddress": "0xd58e1Ed9f18Da9dD1fAf3E23FFf883b94c80c935",
    "transactionIndex": 29,
    "gasUsed": "3590760",
    "logsBloom": "0x
    "blockHash": "0x14820bc9668515c2e32d71bb0f742255ba8373d9c7e6fbb2825720475149b193",
    "transactionHash": "0x6ea9189231f675ea0d011602a6b47b6d7a79874a6beca57846be4ecdc796a832",
    "logs": [
      {
        "transactionIndex": 29,
        "blockNumber": 8325032,
        "transactionHash": "0x6ea9189231f675ea0d011602a6b47b6d7a79874a6beca57846be4ecdc796a832",
        "address": "0xd58e1Ed9f18Da9dD1fAf3E23FFf883b94c80c935",
        "topics": [
          "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000ff",
        "logIndex": 67,
        "blockHash": "0x14820bc9668515c2e32d71bb0f742255ba8373d9c7e6fbb2825720475149b193"
      }
    ],
    "blockNumber": 8325032,
    "cumulativeGasUsed": "9170835",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x927F584d4321C1dCcBf5e2902368124b02419a1E",
    "0x0000000000000000000000000000000000000000",
    "0xCCa7d1416518D095E729904aAeA087dBA749A4dC"
  ],
  "numDeployments": 1,
  "solcInputHash": "725e8f5448a2e4e5c5f0d26ffebefbc2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_v2DataProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_v3AddressesProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"V2_ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"V2_DATA_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IAaveProtocolDataProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"V2_LENDING_POOL\",\"outputs\":[{\"internalType\":\"contract ILendingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"V3_ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"V3_DATA_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolDataProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"V3_POOL\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aWNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approvePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"borrowETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"borrowETHWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"borrowWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllReservesTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"enum VERSION\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"internalType\":\"struct TokenDataEx[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_biconomy\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"repayAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repayInterestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"withdrawalAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"repayAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"repayAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repayInterestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"repayAndWithdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"repayAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repayInterestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"repayAndWithdrawETHWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"repayAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repayInterestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"withdrawalAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"repayAndWithdrawWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"repayETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repayInterestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"withdrawalAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"repayETHAndWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repayInterestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"withdrawalAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"repayETHAndWithdrawWithPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_biconomy\",\"type\":\"address\"}],\"name\":\"setBiconomy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"supplyAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supplyAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrowAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestRateMode\",\"type\":\"uint256\"}],\"name\":\"supplyAndBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"supplyAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supplyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestRateMode\",\"type\":\"uint256\"}],\"name\":\"supplyAndBorrowETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"supplyAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supplyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyAndBorrowETHWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"supplyAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supplyAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrowAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyAndBorrowWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"supplyETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrowAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestRateMode\",\"type\":\"uint256\"}],\"name\":\"supplyETHAndBorrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrowAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyETHAndBorrowWithPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"withdrawETHWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"withdrawWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approvePool()\":{\"notice\":\"If new assets are added into the pool, it needs to be called.\"},\"borrow(uint256,address,uint256,uint256)\":{\"notice\":\"The user must approve the delegation to this SC for the asset's debtToken.\"},\"borrowETHWithPermit(uint256,uint256,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"It works for only v3.\"},\"borrowWithPermit(address,uint256,uint256,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"It works for only v3.\"},\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"},\"repay(uint256,address,uint256,uint256)\":{\"notice\":\"The user must approve this SC for the asset.\"},\"supply(uint256,address,uint256)\":{\"notice\":\"The user must approve this SC for the asset.\"},\"supplyAndBorrowETHWithPermit(address,uint256,uint256,uint256,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"It works for only v3.\"},\"supplyAndBorrowWithPermit(address,uint256,address,uint256,uint256,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"It works for only v3.\"},\"supplyETHAndBorrowWithPermit(address,uint256,uint256,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"It works for only v3.\"},\"withdraw(uint256,address,uint256)\":{\"notice\":\"The user must approve this SC for the asset's aToken.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveAdapter.sol\":\"AaveAdapter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/misc/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\ninterface IWETH {\\n  function deposit() external payable;\\n\\n  function withdraw(uint256) external;\\n\\n  function approve(address guy, uint256 wad) external returns (bool);\\n\\n  function transferFrom(\\n    address src,\\n    address dst,\\n    uint256 wad\\n  ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x3cd9fc4e2ca0cd270484dfec3324f682699c185f08e2854148d35742d27a2540\",\"license\":\"AGPL-3.0\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20PermitUpgradeable {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../extensions/draft-IERC20PermitUpgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20PermitUpgradeable token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x220c4a5af915e656be2aaa85ca57505d102418e476b1e2ef6c62e0c6ac143871\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/AaveAdapter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport {IWETH} from '@aave/core-v3/contracts/misc/interfaces/IWETH.sol';\\nimport \\\"../libs/BaseRelayRecipient.sol\\\";\\nimport \\\"./aave2/Aave2DataTypes.sol\\\";\\nimport \\\"./aave2/Aave2Interfaces.sol\\\";\\nimport \\\"./aave3/Aave3DataTypes.sol\\\";\\nimport \\\"./aave3/Aave3Interfaces.sol\\\";\\nimport \\\"./common/DataTypes.sol\\\";\\n\\ncontract AaveAdapter is OwnableUpgradeable, BaseRelayRecipient {\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n    using SafeERC20Upgradeable for V3_IAToken;\\n\\n    ILendingPoolAddressesProvider public immutable V2_ADDRESSES_PROVIDER;\\n    IAaveProtocolDataProvider public immutable V2_DATA_PROVIDER;\\n    ILendingPool public immutable V2_LENDING_POOL;\\n\\n    IPoolAddressesProvider public immutable V3_ADDRESSES_PROVIDER;\\n    IPoolDataProvider public immutable V3_DATA_PROVIDER;\\n    IPool public immutable V3_POOL;\\n\\n    IWETH public immutable WNATIVE;\\n    address public immutable aWNATIVE;\\n    address internal immutable stableDebtWNATIVE;\\n    address internal immutable variableDebtWNATIVE;\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor(address _v2DataProvider, address _v3AddressesProvider, address _wnative) {\\n        _disableInitializers();\\n\\n        bool v2Supported = _v2DataProvider != address(0) ? true : false;\\n        V2_DATA_PROVIDER = IAaveProtocolDataProvider(_v2DataProvider);\\n        V2_ADDRESSES_PROVIDER = ILendingPoolAddressesProvider(v2Supported ? V2_DATA_PROVIDER.ADDRESSES_PROVIDER() : address(0));\\n        V2_LENDING_POOL = ILendingPool(v2Supported ? V2_ADDRESSES_PROVIDER.getLendingPool() : address(0));\\n\\n        bool v3Supported = _v3AddressesProvider != address(0) ? true : false;\\n        V3_ADDRESSES_PROVIDER = IPoolAddressesProvider(_v3AddressesProvider);\\n        V3_DATA_PROVIDER = IPoolDataProvider(v3Supported ? V3_ADDRESSES_PROVIDER.getPoolDataProvider() : address(0));\\n        V3_POOL = IPool(v3Supported ? V3_ADDRESSES_PROVIDER.getPool() : address(0));\\n\\n        WNATIVE = IWETH(_wnative);\\n        (aWNATIVE, stableDebtWNATIVE, variableDebtWNATIVE) = (address(V2_DATA_PROVIDER) != address(0))\\n            ? V2_DATA_PROVIDER.getReserveTokensAddresses(_wnative)\\n            : V3_DATA_PROVIDER.getReserveTokensAddresses(_wnative);\\n    }\\n\\n    function initialize(address _biconomy) public initializer {\\n        __Ownable_init();\\n\\n        trustedForwarder = _biconomy;\\n\\n        _approvePool();\\n    }\\n\\n    function setBiconomy(address _biconomy) external onlyOwner {\\n        trustedForwarder = _biconomy;\\n    }\\n\\n    function _msgSender() internal override(ContextUpgradeable, BaseRelayRecipient) view returns (address) {\\n        return BaseRelayRecipient._msgSender();\\n    }\\n\\n    function versionRecipient() external pure override returns (string memory) {\\n        return \\\"1\\\";\\n    }\\n\\n    /// @notice If new assets are added into the pool, it needs to be called.\\n    function approvePool() external onlyOwner {\\n        _approvePool();\\n    }\\n\\n    function _approvePool() internal {\\n        if (address(V2_LENDING_POOL) != address(0)) {\\n            address[] memory reserves = V2_LENDING_POOL.getReservesList();\\n            for (uint i = 0; i < reserves.length; i++) {\\n                IERC20Upgradeable reserve = IERC20Upgradeable(reserves[i]);\\n                if (reserve.allowance(address(this), address(V2_LENDING_POOL)) == 0) {\\n                    reserve.safeApprove(address(V2_LENDING_POOL), type(uint).max);\\n                }\\n            }\\n        }\\n        if (address(V3_POOL) != address(0)) {\\n            address[] memory reserves = V3_POOL.getReservesList();\\n            for (uint i = 0; i < reserves.length; i++) {\\n                IERC20Upgradeable reserve = IERC20Upgradeable(reserves[i]);\\n                if (reserve.allowance(address(this), address(V3_POOL)) == 0) {\\n                    reserve.safeApprove(address(V3_POOL), type(uint).max);\\n                }\\n            }\\n        }\\n    }\\n\\n    function getAllReservesTokens() public view returns (TokenDataEx[] memory tokens) {\\n        AaveDataTypes.TokenData[] memory v2Tokens;\\n        uint v2TokensLength;\\n        AaveDataTypes.TokenData[] memory v3Tokens;\\n        uint v3TokensLength;\\n\\n        if (address(V2_DATA_PROVIDER) != address(0)) {\\n            v2Tokens = V2_DATA_PROVIDER.getAllReservesTokens();\\n            v2TokensLength = v2Tokens.length;\\n        }\\n        if (address(V3_DATA_PROVIDER) != address(0)) {\\n            v3Tokens = V3_DATA_PROVIDER.getAllReservesTokens();\\n            v3TokensLength = v3Tokens.length;\\n        }\\n\\n        tokens = new TokenDataEx[](v2TokensLength + v3TokensLength);\\n        for (uint i = 0; i < v2TokensLength; i ++) {\\n            tokens[i].version = VERSION.V2;\\n            tokens[i].symbol = v2Tokens[i].symbol;\\n            tokens[i].tokenAddress = v2Tokens[i].tokenAddress;\\n        }\\n        uint index;\\n        for (uint i = 0; i < v3TokensLength; i ++) {\\n            index = v2TokensLength + i;\\n            tokens[index].version = VERSION.V3;\\n            tokens[index].symbol = v3Tokens[i].symbol;\\n            tokens[index].tokenAddress = v3Tokens[i].tokenAddress;\\n        }\\n    }\\n\\n    /// @notice The user must approve this SC for the asset.\\n    function supply(uint version, address asset, uint amount) public {\\n        address account = _msgSender();\\n        IERC20Upgradeable(asset).safeTransferFrom(account, address(this), amount);\\n\\n        if (uint(VERSION.V2) == version) {\\n            V2_LENDING_POOL.deposit(asset, amount, account, 0);\\n        } else {\\n            V3_POOL.supply(asset, amount, account, 0);\\n        }\\n    }\\n\\n    function supplyETH(uint version) payable public {\\n        address account = _msgSender();\\n        WNATIVE.deposit{value: msg.value}();\\n\\n        if (uint(VERSION.V2) == version) {\\n            V2_LENDING_POOL.deposit(address(WNATIVE), msg.value, account, 0);\\n        } else {\\n            V3_POOL.supply(address(WNATIVE), msg.value, account, 0);\\n        }\\n    }\\n\\n    /// @notice The user must approve this SC for the asset's aToken.\\n    function withdraw(uint version, address asset, uint amount) public {\\n        address account = _msgSender();\\n        address aToken;\\n\\n        if (uint(VERSION.V2) == version) {\\n            (aToken,,) = V2_DATA_PROVIDER.getReserveTokensAddresses(asset);\\n        } else {\\n            (aToken,,) = V3_DATA_PROVIDER.getReserveTokensAddresses(asset);\\n        }\\n        _withdraw(version, asset, amount, account, aToken);\\n    }\\n\\n    function withdrawWithPermit(\\n        uint version, address asset, uint amount,\\n        uint permitAmount, uint permitDeadline, uint8 permitV, bytes32 permitR, bytes32 permitS\\n    ) public {\\n        address account = _msgSender();\\n        address aToken;\\n\\n        if (uint(VERSION.V2) == version) {\\n            (aToken,,) = V2_DATA_PROVIDER.getReserveTokensAddresses(asset);\\n        } else {\\n            (aToken,,) = V3_DATA_PROVIDER.getReserveTokensAddresses(asset);\\n        }\\n        V3_IAToken(aToken).permit(account, address(this), permitAmount, permitDeadline, permitV, permitR, permitS);\\n\\n        _withdraw(version, asset, amount, account, aToken);\\n    }\\n\\n    function _withdraw(uint version, address asset, uint amount, address account, address aToken) internal {\\n        uint amountToWithdraw = amount;\\n        if (amount == type(uint).max) {\\n            amountToWithdraw = IERC20Upgradeable(aToken).balanceOf(account);\\n        }\\n\\n        IERC20Upgradeable(aToken).safeTransferFrom(account, address(this), amountToWithdraw);\\n        if (uint(VERSION.V2) == version) {\\n            V2_LENDING_POOL.withdraw(asset, amountToWithdraw, account);\\n        } else {\\n            V3_POOL.withdraw(asset, amountToWithdraw, account);\\n        }\\n    }\\n\\n    function withdrawETH(uint version, uint amount) public {\\n        _withdrawETH(version, amount, _msgSender());\\n    }\\n\\n    function withdrawETHWithPermit(\\n        uint version, uint amount,\\n        uint permitAmount, uint permitDeadline, uint8 permitV, bytes32 permitR, bytes32 permitS\\n    ) public {\\n        address account = _msgSender();\\n        V3_IAToken(aWNATIVE).permit(account, address(this), permitAmount, permitDeadline, permitV, permitR, permitS);\\n        _withdrawETH(version, amount, account);\\n    }\\n\\n    function _withdrawETH(uint version, uint amount, address account) internal {\\n        uint amountToWithdraw = amount;\\n        if (amount == type(uint).max) {\\n            amountToWithdraw = IERC20Upgradeable(aWNATIVE).balanceOf(account);\\n        }\\n\\n        IERC20Upgradeable(aWNATIVE).safeTransferFrom(account, address(this), amountToWithdraw);\\n        if (uint(VERSION.V2) == version) {\\n            V2_LENDING_POOL.withdraw(address(WNATIVE), amountToWithdraw, address(this));\\n        } else {\\n            V3_POOL.withdraw(address(WNATIVE), amountToWithdraw, address(this));\\n        }\\n        WNATIVE.withdraw(amountToWithdraw);\\n        _safeTransferETH(account, amountToWithdraw);\\n    }\\n\\n    /// @notice The user must approve the delegation to this SC for the asset's debtToken.\\n    function borrow(uint version, address asset, uint amount, uint interestRateMode) public {\\n        address account = _msgSender();\\n        if (uint(VERSION.V2) == version) {\\n            V2_LENDING_POOL.borrow(asset, amount, interestRateMode, 0, account);\\n        } else {\\n            V3_POOL.borrow(asset, amount, interestRateMode, 0, account);\\n        }\\n        IERC20Upgradeable(asset).safeTransfer(account, amount);\\n    }\\n\\n    /// @notice It works for only v3.\\n    function borrowWithPermit(\\n        address asset, uint amount, uint interestRateMode,\\n        uint permitAmount, uint permitDeadline, uint8 permitV, bytes32 permitR, bytes32 permitS\\n    ) public {\\n        address account = _msgSender();\\n        (, address stableDebtTokenAddress, address variableDebtTokenAddress) = V3_DATA_PROVIDER.getReserveTokensAddresses(asset);\\n        address debtToken = interestRateMode == 1 ? stableDebtTokenAddress : variableDebtTokenAddress;\\n\\n        V3_ICreditDelegationToken(debtToken).delegationWithSig(\\n            account, address(this),\\n            permitAmount, permitDeadline, permitV, permitR, permitS);\\n\\n        V3_POOL.borrow(asset, amount, interestRateMode, 0, account);\\n        IERC20Upgradeable(asset).safeTransfer(account, amount);\\n    }\\n\\n    function borrowETH(uint version, uint amount, uint interestRateMode) public {\\n        address account = _msgSender();\\n        if (uint(VERSION.V2) == version) {\\n            V2_LENDING_POOL.borrow(address(WNATIVE), amount, interestRateMode, 0, account);\\n        } else {\\n            V3_POOL.borrow(address(WNATIVE), amount, interestRateMode, 0, account);\\n        }\\n        WNATIVE.withdraw(amount);\\n        _safeTransferETH(account, amount);\\n    }\\n\\n    /// @notice It works for only v3.\\n    function borrowETHWithPermit(\\n        uint amount, uint interestRateMode,\\n        uint permitAmount, uint permitDeadline, uint8 permitV, bytes32 permitR, bytes32 permitS\\n    ) public {\\n        address account = _msgSender();\\n        address debtToken = interestRateMode == 1 ? stableDebtWNATIVE : variableDebtWNATIVE;\\n\\n        V3_ICreditDelegationToken(debtToken).delegationWithSig(\\n            account, address(this),\\n            permitAmount, permitDeadline, permitV, permitR, permitS);\\n\\n        V3_POOL.borrow(address(WNATIVE), amount, interestRateMode, 0, account);\\n        WNATIVE.withdraw(amount);\\n        _safeTransferETH(account, amount);\\n    }\\n\\n    /// @notice The user must approve this SC for the asset.\\n    function repay(uint version, address asset, uint amount, uint interestRateMode) public {\\n        address account = _msgSender();\\n\\n        uint paybackAmount = amount;\\n        if (amount == type(uint).max) {\\n            address stableDebtTokenAddress;\\n            address variableDebtTokenAddress;\\n\\n            if (uint(VERSION.V2) == version) {\\n                (, stableDebtTokenAddress, variableDebtTokenAddress) = V2_DATA_PROVIDER.getReserveTokensAddresses(asset);\\n            } else {\\n                (, stableDebtTokenAddress, variableDebtTokenAddress) = V3_DATA_PROVIDER.getReserveTokensAddresses(asset);\\n            }\\n            paybackAmount = IERC20Upgradeable(interestRateMode == 1 ? stableDebtTokenAddress : variableDebtTokenAddress).balanceOf(account);\\n        }\\n\\n        IERC20Upgradeable(asset).safeTransferFrom(account, address(this), paybackAmount);\\n        if (uint(VERSION.V2) == version) {\\n            V2_LENDING_POOL.repay(asset, paybackAmount, interestRateMode, account);\\n        } else {\\n            V3_POOL.repay(asset, paybackAmount, interestRateMode, account);\\n        }\\n    }\\n\\n    function repayETH(uint version, uint amount, uint interestRateMode) payable public {\\n        address account = _msgSender();\\n\\n        uint paybackAmount = amount;\\n        if (amount == type(uint).max) {\\n            paybackAmount = IERC20Upgradeable(interestRateMode == 1 ? stableDebtWNATIVE : variableDebtWNATIVE).balanceOf(account);\\n        }\\n\\n        require(msg.value >= paybackAmount, 'msg.value is less than repayment amount');\\n        WNATIVE.deposit{value: paybackAmount}();\\n        if (uint(VERSION.V2) == version) {\\n            V2_LENDING_POOL.repay(address(WNATIVE), paybackAmount, interestRateMode, account);\\n        } else {\\n            V3_POOL.repay(address(WNATIVE), paybackAmount, interestRateMode, account);\\n        }\\n\\n        uint left = msg.value - paybackAmount;\\n        if (left > 0) _safeTransferETH(account, left);\\n    }\\n\\n    function supplyAndBorrow(uint version,\\n        address supplyAsset, uint supplyAmount,\\n        address borrowAsset, uint borrowAmount, uint borrowInterestRateMode\\n    ) external {\\n        supply(version, supplyAsset, supplyAmount);\\n        borrow(version, borrowAsset, borrowAmount, borrowInterestRateMode);\\n    }\\n\\n    /// @notice It works for only v3.\\n    function supplyAndBorrowWithPermit(\\n        address supplyAsset, uint supplyAmount,\\n        address borrowAsset, uint borrowAmount, uint borrowInterestRateMode,\\n        uint permitAmount, uint permitDeadline, uint8 permitV, bytes32 permitR, bytes32 permitS\\n    ) external {\\n        supply(3, supplyAsset, supplyAmount);\\n        borrowWithPermit(borrowAsset, borrowAmount, borrowInterestRateMode,\\n            permitAmount, permitDeadline, permitV, permitR, permitS\\n        );\\n    }\\n\\n    function supplyETHAndBorrow(uint version,\\n        address borrowAsset, uint borrowAmount, uint borrowInterestRateMode\\n    ) payable external {\\n        supplyETH(version);\\n        borrow(version, borrowAsset, borrowAmount, borrowInterestRateMode);\\n    }\\n\\n    function supplyAndBorrowETH(uint version,\\n        address supplyAsset, uint supplyAmount,\\n        uint borrowAmount, uint borrowInterestRateMode\\n    ) external {\\n        supply(version, supplyAsset, supplyAmount);\\n        borrowETH(version, borrowAmount, borrowInterestRateMode);\\n    }\\n\\n    /// @notice It works for only v3.\\n    function supplyETHAndBorrowWithPermit(\\n        address borrowAsset, uint borrowAmount, uint borrowInterestRateMode,\\n        uint permitAmount, uint permitDeadline, uint8 permitV, bytes32 permitR, bytes32 permitS\\n    ) payable external {\\n        supplyETH(3);\\n        borrowWithPermit(borrowAsset, borrowAmount, borrowInterestRateMode,\\n            permitAmount, permitDeadline, permitV, permitR, permitS\\n        );\\n    }\\n\\n    /// @notice It works for only v3.\\n    function supplyAndBorrowETHWithPermit(\\n        address supplyAsset, uint supplyAmount,\\n        uint borrowAmount, uint borrowInterestRateMode,\\n        uint permitAmount, uint permitDeadline, uint8 permitV, bytes32 permitR, bytes32 permitS\\n    ) external {\\n        supply(3, supplyAsset, supplyAmount);\\n        borrowETHWithPermit(borrowAmount, borrowInterestRateMode,\\n            permitAmount, permitDeadline, permitV, permitR, permitS\\n        );\\n    }\\n\\n    function repayAndWithdraw(uint version,\\n        address repayAsset, uint repayAmount, uint repayInterestRateMode,\\n        address withdrawalAsset, uint withdrawalAmount\\n    ) external {\\n        repay(version, repayAsset, repayAmount, repayInterestRateMode);\\n        withdraw(version, withdrawalAsset, withdrawalAmount);\\n    }\\n\\n    function repayAndWithdrawWithPermit(uint version,\\n        address repayAsset, uint repayAmount, uint repayInterestRateMode,\\n        address withdrawalAsset, uint withdrawalAmount,\\n        uint permitAmount, uint permitDeadline, uint8 permitV, bytes32 permitR, bytes32 permitS\\n    ) external {\\n        repay(version, repayAsset, repayAmount, repayInterestRateMode);\\n        withdrawWithPermit(version, withdrawalAsset, withdrawalAmount,\\n            permitAmount, permitDeadline, permitV, permitR, permitS\\n        );\\n    }\\n\\n    function repayETHAndWithdraw(uint version,\\n        uint repayAmount, uint repayInterestRateMode,\\n        address withdrawalAsset, uint withdrawalAmount\\n    ) payable external {\\n        repayETH(version, repayAmount, repayInterestRateMode);\\n        withdraw(version, withdrawalAsset, withdrawalAmount);\\n    }\\n\\n    function repayAndWithdrawETH(uint version,\\n        address repayAsset, uint repayAmount, uint repayInterestRateMode,\\n        uint withdrawalAmount\\n    ) external {\\n        repay(version, repayAsset, repayAmount, repayInterestRateMode);\\n        withdrawETH(version, withdrawalAmount);\\n    }\\n\\n    function repayETHAndWithdrawWithPermit(uint version,\\n        uint repayAmount, uint repayInterestRateMode,\\n        address withdrawalAsset, uint withdrawalAmount,\\n        uint permitAmount, uint permitDeadline, uint8 permitV, bytes32 permitR, bytes32 permitS\\n    ) payable external {\\n        repayETH(version, repayAmount, repayInterestRateMode);\\n        withdrawWithPermit(version, withdrawalAsset, withdrawalAmount,\\n            permitAmount, permitDeadline, permitV, permitR, permitS\\n        );\\n    }\\n\\n    function repayAndWithdrawETHWithPermit(uint version,\\n        address repayAsset, uint repayAmount, uint repayInterestRateMode,\\n        uint withdrawalAmount,\\n        uint permitAmount, uint permitDeadline, uint8 permitV, bytes32 permitR, bytes32 permitS\\n    ) external {\\n        repay(version, repayAsset, repayAmount, repayInterestRateMode);\\n        withdrawETHWithPermit(version, withdrawalAmount,\\n            permitAmount, permitDeadline, permitV, permitR, permitS\\n        );\\n    }\\n\\n    /**\\n    * @dev transfer ETH to an address, revert if it fails.\\n    * @param to recipient of the transfer\\n    * @param value the amount to send\\n    */\\n    function _safeTransferETH(address to, uint value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'ETH_TRANSFER_FAILED');\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0xa01d42285c515dfd06281e3a0e91abb52a1ebe7bf27408cbf9ef411dd848ff16\",\"license\":\"MIT\"},\"contracts/aave2/Aave2DataTypes.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.9;\\r\\n\\r\\nlibrary Aave2DataTypes {\\r\\n  // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\r\\n  struct ReserveData {\\r\\n    //stores the reserve configuration\\r\\n    ReserveConfigurationMap configuration;\\r\\n    //the liquidity index. Expressed in ray\\r\\n    uint128 liquidityIndex;\\r\\n    //variable borrow index. Expressed in ray\\r\\n    uint128 variableBorrowIndex;\\r\\n    //the current supply rate. Expressed in ray\\r\\n    uint128 currentLiquidityRate;\\r\\n    //the current variable borrow rate. Expressed in ray\\r\\n    uint128 currentVariableBorrowRate;\\r\\n    //the current stable borrow rate. Expressed in ray\\r\\n    uint128 currentStableBorrowRate;\\r\\n    uint40 lastUpdateTimestamp;\\r\\n    //tokens addresses\\r\\n    address aTokenAddress;\\r\\n    address stableDebtTokenAddress;\\r\\n    address variableDebtTokenAddress;\\r\\n    //address of the interest rate strategy\\r\\n    address interestRateStrategyAddress;\\r\\n    //the id of the reserve. Represents the position in the list of the active reserves\\r\\n    uint8 id;\\r\\n  }\\r\\n\\r\\n  struct ReserveConfigurationMap {\\r\\n    //bit 0-15: LTV\\r\\n    //bit 16-31: Liq. threshold\\r\\n    //bit 32-47: Liq. bonus\\r\\n    //bit 48-55: Decimals\\r\\n    //bit 56: Reserve is active\\r\\n    //bit 57: reserve is frozen\\r\\n    //bit 58: borrowing is enabled\\r\\n    //bit 59: stable rate borrowing enabled\\r\\n    //bit 60-63: reserved\\r\\n    //bit 64-79: reserve factor\\r\\n    uint256 data;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x8f6d3c7f0ecf41f591aaa263cc587f5f2f3e041afc74398952b8bb9793e1e0c6\",\"license\":\"MIT\"},\"contracts/aave2/Aave2Interfaces.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"../common/DataTypes.sol\\\";\\nimport \\\"./Aave2DataTypes.sol\\\";\\n\\ninterface IAaveProtocolDataProvider {\\n  function ADDRESSES_PROVIDER() external view returns (address);\\n  function getAllReservesTokens() external view returns (AaveDataTypes.TokenData[] memory);\\n  function getAllATokens() external view returns (AaveDataTypes.TokenData[] memory);\\n  function getReserveConfigurationData(address asset) external view returns (\\n    uint256 decimals,\\n    uint256 ltv,\\n    uint256 liquidationThreshold,\\n    uint256 liquidationBonus,\\n    uint256 reserveFactor,\\n    bool usageAsCollateralEnabled,\\n    bool borrowingEnabled,\\n    bool stableBorrowRateEnabled,\\n    bool isActive,\\n    bool isFrozen\\n  );\\n  function getReserveData(address asset) external view returns (\\n    uint256 availableLiquidity,\\n    uint256 totalStableDebt,\\n    uint256 totalVariableDebt,\\n    uint256 liquidityRate,\\n    uint256 variableBorrowRate,\\n    uint256 stableBorrowRate,\\n    uint256 averageStableBorrowRate,\\n    uint256 liquidityIndex,\\n    uint256 variableBorrowIndex,\\n    uint40 lastUpdateTimestamp\\n  );\\n  function getUserReserveData(address asset, address user) external view returns (\\n    uint256 currentATokenBalance,\\n    uint256 currentStableDebt,\\n    uint256 currentVariableDebt,\\n    uint256 principalStableDebt,\\n    uint256 scaledVariableDebt,\\n    uint256 stableBorrowRate,\\n    uint256 liquidityRate,\\n    uint40 stableRateLastUpdated,\\n    bool usageAsCollateralEnabled\\n  );\\n  function getReserveTokensAddresses(address asset) external view returns (\\n    address aTokenAddress,\\n    address stableDebtTokenAddress,\\n    address variableDebtTokenAddress\\n  );\\n}\\n\\ninterface ILendingPoolAddressesProvider {\\n  function getLendingPool() external view returns (address);\\n  function getPriceOracle() external view returns (address);\\n}\\n\\ninterface ILendingPool {\\n  function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\\n  function withdraw(address asset, uint256 amount, address to) external returns (uint256);\\n  function borrow(address asset, uint256 amount, uint256 interestRateMode, uint16 referralCode, address onBehalfOf) external;\\n  function repay(address asset, uint256 amount, uint256 rateMode, address onBehalfOf) external returns (uint256);\\n  function swapBorrowRateMode(address asset, uint256 rateMode) external;\\n  function rebalanceStableBorrowRate(address asset, address user) external;\\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\\n  function liquidationCall(address collateralAsset, address debtAsset, address user, uint256 debtToCover, bool receiveAToken) external;\\n\\n  function getUserAccountData(address user) external view returns (\\n    uint256 totalCollateralETH,\\n    uint256 totalDebtETH,\\n    uint256 availableBorrowsETH,\\n    uint256 currentLiquidationThreshold,\\n    uint256 ltv,\\n    uint256 healthFactor\\n  );\\n  function getReserveData(address asset) external view returns (Aave2DataTypes.ReserveData memory);\\n  function getReservesList() external view returns (address[] memory);\\n}\\n\\ninterface V2_ICreditDelegationToken is IERC20Upgradeable {\\n    function approveDelegation(address delegatee, uint256 amount) external;\\n    function borrowAllowance(address fromUser, address toUser) external view returns (uint256);\\n}\\n\\ninterface V2_IAToken is IERC20Upgradeable {\\n    function UNDERLYING_ASSET_ADDRESS() external view returns (address);\\n    function POOL() external view returns (address);\\n    function getIncentivesController() external view returns (address);\\n    function name() external view returns(string memory);\\n    function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    function _nonces(address owner) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xbab085b7819fc572202688a172343f7c8afbaa5c41d17e5d7c4ea6c66333cf78\",\"license\":\"MIT\"},\"contracts/aave3/Aave3DataTypes.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.9;\\r\\n\\r\\nlibrary Aave3DataTypes {\\r\\n  struct ReserveData {\\r\\n    //stores the reserve configuration\\r\\n    ReserveConfigurationMap configuration;\\r\\n    //the liquidity index. Expressed in ray\\r\\n    uint128 liquidityIndex;\\r\\n    //the current supply rate. Expressed in ray\\r\\n    uint128 currentLiquidityRate;\\r\\n    //variable borrow index. Expressed in ray\\r\\n    uint128 variableBorrowIndex;\\r\\n    //the current variable borrow rate. Expressed in ray\\r\\n    uint128 currentVariableBorrowRate;\\r\\n    //the current stable borrow rate. Expressed in ray\\r\\n    uint128 currentStableBorrowRate;\\r\\n    //timestamp of last update\\r\\n    uint40 lastUpdateTimestamp;\\r\\n    //the id of the reserve. Represents the position in the list of the active reserves\\r\\n    uint16 id;\\r\\n    //aToken address\\r\\n    address aTokenAddress;\\r\\n    //stableDebtToken address\\r\\n    address stableDebtTokenAddress;\\r\\n    //variableDebtToken address\\r\\n    address variableDebtTokenAddress;\\r\\n    //address of the interest rate strategy\\r\\n    address interestRateStrategyAddress;\\r\\n    //the current treasury balance, scaled\\r\\n    uint128 accruedToTreasury;\\r\\n    //the outstanding unbacked aTokens minted through the bridging feature\\r\\n    uint128 unbacked;\\r\\n    //the outstanding debt borrowed against this asset in isolation mode\\r\\n    uint128 isolationModeTotalDebt;\\r\\n  }\\r\\n\\r\\n  struct ReserveConfigurationMap {\\r\\n    //bit 0-15: LTV\\r\\n    //bit 16-31: Liq. threshold\\r\\n    //bit 32-47: Liq. bonus\\r\\n    //bit 48-55: Decimals\\r\\n    //bit 56: reserve is active\\r\\n    //bit 57: reserve is frozen\\r\\n    //bit 58: borrowing is enabled\\r\\n    //bit 59: stable rate borrowing enabled\\r\\n    //bit 60: asset is paused\\r\\n    //bit 61: borrowing in isolation mode is enabled\\r\\n    //bit 62-63: reserved\\r\\n    //bit 64-79: reserve factor\\r\\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\\r\\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\\r\\n    //bit 152-167 liquidation protocol fee\\r\\n    //bit 168-175 eMode category\\r\\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\\r\\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\\r\\n    //bit 252-255 unused\\r\\n\\r\\n    uint256 data;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x5641d0dfa356923b65be614be77945cd6ddd067b944b61bf9f2fef96365cfed0\",\"license\":\"MIT\"},\"contracts/aave3/Aave3Interfaces.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"../common/DataTypes.sol\\\";\\nimport \\\"./Aave3DataTypes.sol\\\";\\n\\ninterface IPoolAddressesProvider {\\n  function getPool() external view returns (address);\\n  function getPriceOracle() external view returns (address);\\n  function getPoolDataProvider() external view returns (address);\\n}\\n\\ninterface IPoolDataProvider {\\n    function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\\n    function getAllReservesTokens() external view returns (AaveDataTypes.TokenData[] memory);\\n    function getAllATokens() external view returns (AaveDataTypes.TokenData[] memory);\\n    function getReserveConfigurationData(address asset) external view returns (\\n        uint256 decimals,\\n        uint256 ltv,\\n        uint256 liquidationThreshold,\\n        uint256 liquidationBonus,\\n        uint256 reserveFactor,\\n        bool usageAsCollateralEnabled,\\n        bool borrowingEnabled,\\n        bool stableBorrowRateEnabled,\\n        bool isActive,\\n        bool isFrozen\\n    );\\n    function getReserveEModeCategory(address asset) external view returns (uint256);\\n    function getReserveCaps(address asset) external view returns (uint256 borrowCap, uint256 supplyCap);\\n    function getPaused(address asset) external view returns (bool isPaused);\\n    function getSiloedBorrowing(address asset) external view returns (bool);\\n    function getLiquidationProtocolFee(address asset) external view returns (uint256);\\n    function getUnbackedMintCap(address asset) external view returns (uint256);\\n    function getDebtCeiling(address asset) external view returns (uint256);\\n    function getDebtCeilingDecimals() external pure returns (uint256);\\n    function getReserveData(address asset) external view returns (\\n        uint256 unbacked,\\n        uint256 accruedToTreasuryScaled,\\n        uint256 totalAToken,\\n        uint256 totalStableDebt,\\n        uint256 totalVariableDebt,\\n        uint256 liquidityRate,\\n        uint256 variableBorrowRate,\\n        uint256 stableBorrowRate,\\n        uint256 averageStableBorrowRate,\\n        uint256 liquidityIndex,\\n        uint256 variableBorrowIndex,\\n        uint40 lastUpdateTimestamp\\n    );\\n    function getATokenTotalSupply(address asset) external view returns (uint256);\\n    function getTotalDebt(address asset) external view returns (uint256);\\n    function getUserReserveData(address asset, address user) external view returns (\\n        uint256 currentATokenBalance,\\n        uint256 currentStableDebt,\\n        uint256 currentVariableDebt,\\n        uint256 principalStableDebt,\\n        uint256 scaledVariableDebt,\\n        uint256 stableBorrowRate,\\n        uint256 liquidityRate,\\n        uint40 stableRateLastUpdated,\\n        bool usageAsCollateralEnabled\\n    );\\n    function getReserveTokensAddresses(address asset) external view returns (\\n        address aTokenAddress,\\n        address stableDebtTokenAddress,\\n        address variableDebtTokenAddress\\n    );\\n    function getInterestRateStrategyAddress(address asset) external view returns (address irStrategyAddress);\\n    function getFlashLoanEnabled(address asset) external view returns (bool);\\n}\\n\\ninterface IPool {\\n    function supply(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\\n    function supplyWithPermit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode, uint256 deadline, uint8 permitV, bytes32 permitR, bytes32 permitS) external;\\n    function withdraw(address asset, uint256 amount, address to ) external returns (uint256);\\n    function borrow(address asset, uint256 amount, uint256 interestRateMode, uint16 referralCode, address onBehalfOf) external;\\n    function repay(address asset, uint256 amount, uint256 interestRateMode, address onBehalfOf) external returns (uint256);\\n    function repayWithPermit(address asset, uint256 amount, uint256 interestRateMode, address onBehalfOf, uint256 deadline, uint8 permitV, bytes32 permitR, bytes32 permitS) external returns (uint256);\\n    function repayWithATokens(address asset, uint256 amount, uint256 interestRateMode) external returns (uint256);\\n    function swapBorrowRateMode(address asset, uint256 interestRateMode) external;\\n    function rebalanceStableBorrowRate(address asset, address user) external;\\n    function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\\n    function liquidationCall(address collateralAsset, address debtAsset, address user, uint256 debtToCover, bool receiveAToken) external;\\n\\n    function getUserAccountData(address user) external view returns (\\n        uint256 totalCollateralBase,\\n        uint256 totalDebtBase,\\n        uint256 availableBorrowsBase,\\n        uint256 currentLiquidationThreshold,\\n        uint256 ltv,\\n        uint256 healthFactor\\n    );\\n    function getReserveData(address asset) external view returns (Aave3DataTypes.ReserveData memory);\\n    function getReservesList() external view returns (address[] memory);\\n}\\n\\ninterface V3_ICreditDelegationToken is IERC20Upgradeable {\\n    function approveDelegation(address delegatee, uint256 amount) external;\\n    function borrowAllowance(address fromUser, address toUser) external view returns (uint256);\\n\\n    function delegationWithSig(\\n        address delegator,\\n        address delegatee,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n    function name() external view returns(string memory);\\n    function nonces(address owner) external view returns (uint256);\\n}\\n\\ninterface V3_IAToken is IERC20Upgradeable {\\n    function UNDERLYING_ASSET_ADDRESS() external view returns (address);\\n    function POOL() external view returns (address);\\n    function getIncentivesController() external view returns (address);\\n    function name() external view returns(string memory);\\n    function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    function nonces(address owner) external view returns (uint256);\\n}\\n\\ninterface IRewardsController {\\n    /// @dev asset The incentivized asset. It should be address of AToken\\n    function getRewardsByAsset(address asset) external view returns (address[] memory);\\n    function getRewardsData(address asset, address reward) external view returns (\\n      uint256 index,\\n      uint256 emissionPerSecond,\\n      uint256 lastUpdateTimestamp,\\n      uint256 distributionEnd\\n    );\\n    function getAllUserRewards(address[] calldata assets, address user) external view returns (address[] memory, uint256[] memory);\\n    function getUserRewards(address[] calldata assets, address user, address reward) external view returns (uint256);\\n    function claimAllRewards(address[] calldata assets, address to) external returns (address[] memory rewardsList, uint256[] memory claimedAmounts);\\n    function claimAllRewardsToSelf(address[] calldata assets) external returns (address[] memory rewardsList, uint256[] memory claimedAmounts);\\n}\\n\",\"keccak256\":\"0x3e5cfbd269b13d93f792fe04f7fa58863a2e3a2fba58d2070aba126d49b189c1\",\"license\":\"MIT\"},\"contracts/common/DataTypes.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nenum VERSION {NONE, V1, V2, V3}\\n\\nlibrary AaveDataTypes {\\n  struct TokenData {\\n    string symbol;\\n    address tokenAddress;\\n  }\\n}\\n\\nstruct TokenDataEx {\\n  VERSION version;\\n  string symbol;\\n  address tokenAddress;\\n}\",\"keccak256\":\"0x359642c84e1dc04596229b5f2a1787c58dd816553e9c28ed57e0105213e47807\",\"license\":\"MIT\"},\"interfaces/IRelayRecipient.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity 0.8.9;\\n\\n/**\\n * a contract must implement this interface in order to support relayed transaction.\\n * It is better to inherit the BaseRelayRecipient as its implementation.\\n */\\nabstract contract IRelayRecipient {\\n\\n    /**\\n     * return if the forwarder is trusted to forward relayed transactions to us.\\n     * the forwarder is required to verify the sender's signature, and verify\\n     * the call is not a replay.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * return the sender of this call.\\n     * if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\\n     * of the msg.data.\\n     * otherwise, return `msg.sender`\\n     * should be used in the contract anywhere instead of msg.sender\\n     */\\n    function _msgSender() internal virtual view returns (address);\\n\\n    function versionRecipient() external virtual view returns (string memory);\\n}\",\"keccak256\":\"0x2feb0e97ff08902dc4fc0a993753af45c01fb5565f281cefc877f4bc490c8abf\",\"license\":\"MIT\"},\"libs/BaseRelayRecipient.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"../interfaces/IRelayRecipient.sol\\\";\\n\\n/**\\n * A base contract to be inherited by any contract that want to receive relayed transactions\\n * A subclass must use \\\"_msgSender()\\\" instead of \\\"msg.sender\\\"\\n */\\nabstract contract BaseRelayRecipient is IRelayRecipient {\\n\\n    /*\\n     * Forwarder singleton we accept calls from\\n     */\\n    address public trustedForwarder;\\n\\n    /*\\n     * require a function to be called through GSN only\\n     */\\n    modifier trustedForwarderOnly() {\\n        require(msg.sender == address(trustedForwarder), \\\"Function can only be called through the trusted Forwarder\\\");\\n        _;\\n    }\\n\\n    function isTrustedForwarder(address forwarder) public override view returns(bool) {\\n        return forwarder == trustedForwarder;\\n    }\\n\\n    /**\\n     * return the sender of this call.\\n     * if the call came through our trusted forwarder, return the original sender.\\n     * otherwise, return `msg.sender`.\\n     * should be used in the contract anywhere instead of msg.sender\\n     */\\n    function _msgSender() internal override virtual view returns (address ret) {\\n        if (msg.data.length >= 24 && isTrustedForwarder(msg.sender)) {\\n            // At this point we know that the sender is a trusted forwarder,\\n            // so we trust that the last bytes of msg.data are the verified sender address.\\n            // extract sender address from the end of msg.data\\n            assembly {\\n                ret := shr(96,calldataload(sub(calldatasize(),20)))\\n            }\\n        } else {\\n            return msg.sender;\\n        }\\n    }\\n}\",\"keccak256\":\"0x4e6a1c99ec5a0369c516e18940336732c07df7c91f048042926154305b8fb720\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101c06040523480156200001257600080fd5b5060405162004627380380620046278339810160408190526200003591620004f7565b6200003f62000418565b60006001600160a01b038416620000585760006200005b565b60015b6001600160a01b03851660a05290508062000078576000620000ef565b60a0516001600160a01b0316630542975c6040518163ffffffff1660e01b815260040160206040518083038186803b158015620000b457600080fd5b505afa158015620000c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ef919062000541565b6001600160a01b0316608052806200010957600062000180565b6080516001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200014557600080fd5b505afa1580156200015a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000180919062000541565b6001600160a01b0390811660c0526000908416620001a0576000620001a3565b60015b6001600160a01b03851660e052905080620001c057600062000237565b60e0516001600160a01b031663e860accb6040518163ffffffff1660e01b815260040160206040518083038186803b158015620001fc57600080fd5b505afa15801562000211573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000237919062000541565b6001600160a01b0316610100528062000252576000620002c9565b60e0516001600160a01b031663026b1d5f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200028e57600080fd5b505afa158015620002a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c9919062000541565b6001600160a01b03908116610120528381166101405260a051166200037057610100516040516334924edb60e21b81526001600160a01b0385811660048301529091169063d2493b6c9060240160606040518083038186803b1580156200032f57600080fd5b505afa15801562000344573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200036a9190620004f7565b620003f1565b60a0516040516334924edb60e21b81526001600160a01b0385811660048301529091169063d2493b6c9060240160606040518083038186803b158015620003b657600080fd5b505afa158015620003cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003f19190620004f7565b6001600160a01b039081166101a05290811661018052166101605250620005669350505050565b600054610100900460ff1615620004855760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620004d8576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b80516001600160a01b0381168114620004f257600080fd5b919050565b6000806000606084860312156200050d57600080fd5b6200051884620004da565b92506200052860208501620004da565b91506200053860408501620004da565b90509250925092565b6000602082840312156200055457600080fd5b6200055f82620004da565b9392505050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a051613ebd6200076a60003960008181610f3301526115b6015260008181610f5901526115dc01526000818161036d0152818161132a01528181612a680152612af20152600081816107160152818161102a015281816110a101528181611401015281816114ad01528181611527015281816116e1015281816117a8015281816118720152818161194801528181611a0f01528181611ab001528181612b6701528181612c2f0152612cc50152600081816102e801528181610b4901528181610d6a01528181610e9601528181610ffb01528181611257015281816114800152818161184501528181611a8301528181612775015281816127a6015281816128830152818161291c01528181612c020152612e6e015260008181610339015281816109590152818161114201528181611bb701528181611be60152818161212d01526123270152600061040401526000818161067a01528181610a9f01528181610ce001528181610e0a015281816113d40152818161177b015281816119e20152818161258f015281816125c00152818161269d0152818161273601528181612b3a0152612e1e015260008181610535015281816108b401528181611aec01528181611b1b015281816120890152612283015260006105010152613ebd6000f3fe6080604052600436106102555760003560e01c80638327c21411610139578063ac84ca14116100b6578063c7cdea371161007a578063c7cdea3714610778578063d321684814610798578063e16decdc146107b8578063e63697c8146107d8578063f2fde38b146107f8578063fc2096631461081857600080fd5b8063ac84ca14146106cf578063b316ff89146106e2578063b381cf4014610704578063b6b0b5d814610738578063c4d66de81461075857600080fd5b806397aa2f4f116100fd57806397aa2f4f146106285780639b27832e14610648578063a6e9f01e14610668578063a709e1871461069c578063a88bb3d9146106af57600080fd5b80638327c21414610597578063836dbe39146105b757806385234333146105d75780638a712b80146105f75780638da5cb5b1461060a57600080fd5b80634f8ff3b0116101d25780637b303b80116101965780637b303b80146104af5780637da0a877146104cf5780637ec3d641146104ef578063800b71fd14610523578063823225eb14610557578063825a56201461057757600080fd5b80634f8ff3b0146103f2578063572b6c05146104265780637032134e14610465578063715018a6146104855780637ad03c8f1461049a57600080fd5b806319d109131161021957806319d10913146103275780632ff672031461035b5780633bf8c3911461038f57806346a86277146103af578063486ff0cd146103c257600080fd5b806307535c74146102615780630d8b76a81461027657806313ce106414610296578063149078f2146102b65780631521589c146102d657600080fd5b3661025c57005b600080fd5b61027461026f3660046132aa565b61082b565b005b34801561028257600080fd5b506102746102913660046132f3565b610848565b3480156102a257600080fd5b506102746102b1366004613317565b610872565b3480156102c257600080fd5b506102746102d1366004613354565b610be0565b3480156102e257600080fd5b5061030a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561033357600080fd5b5061030a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561036757600080fd5b5061030a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561039b57600080fd5b506102746103aa3660046133b0565b610bf7565b6102746103bd366004613317565b610c0e565b3480156103ce57600080fd5b5060408051808201825260018152603160f81b6020820152905161031e9190613466565b3480156103fe57600080fd5b5061030a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561043257600080fd5b506104556104413660046132f3565b6065546001600160a01b0391821691161490565b604051901515815260200161031e565b34801561047157600080fd5b5061027461048036600461348f565b610c29565b34801561049157600080fd5b50610274610c4f565b3480156104a657600080fd5b50610274610c63565b3480156104bb57600080fd5b506102746104ca366004613508565b610c73565b3480156104db57600080fd5b5060655461030a906001600160a01b031681565b3480156104fb57600080fd5b5061030a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561052f57600080fd5b5061030a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561056357600080fd5b50610274610572366004613508565b610c89565b34801561058357600080fd5b50610274610592366004613550565b610c9f565b3480156105a357600080fd5b506102746105b2366004613317565b610dde565b3480156105c357600080fd5b506102746105d2366004613588565b610f1b565b3480156105e357600080fd5b506102746105f23660046135e4565b611111565b6102746106053660046135e4565b6112ec565b34801561061657600080fd5b506033546001600160a01b031661030a565b34801561063457600080fd5b50610274610643366004613588565b611306565b34801561065457600080fd5b50610274610663366004613653565b6113a8565b34801561067457600080fd5b5061030a7f000000000000000000000000000000000000000000000000000000000000000081565b6102746106aa366004613653565b611595565b3480156106bb57600080fd5b506102746106ca36600461367f565b611912565b6102746106dd36600461370c565b61193a565b3480156106ee57600080fd5b506106f7611ae3565b60405161031e919061373b565b34801561071057600080fd5b5061030a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561074457600080fd5b506102746107533660046137e5565b611ef2565b34801561076457600080fd5b506102746107733660046132f3565b611f0d565b34801561078457600080fd5b50610274610793366004613848565b612041565b3480156107a457600080fd5b506102746107b336600461386a565b612053565b3480156107c457600080fd5b506102746107d33660046138bc565b612224565b3480156107e457600080fd5b506102746107f3366004613550565b61224d565b34801561080457600080fd5b506102746108133660046132f3565b6123b4565b610274610826366004613954565b61242d565b610836858585611595565b61084185838361224d565b5050505050565b610850612448565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b600061087c6124c1565b905082600019811415610a6a57600080876002141561093a576040516334924edb60e21b81526001600160a01b0388811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063d2493b6c9060240160606040518083038186803b1580156108f657600080fd5b505afa15801561090a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092e91906139c2565b90935091506109da9050565b6040516334924edb60e21b81526001600160a01b0388811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063d2493b6c9060240160606040518083038186803b15801561099b57600080fd5b505afa1580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d391906139c2565b9093509150505b846001146109e857806109ea565b815b6040516370a0823160e01b81526001600160a01b03868116600483015291909116906370a082319060240160206040518083038186803b158015610a2d57600080fd5b505afa158015610a41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a659190613a0f565b925050505b610a7f6001600160a01b0386168330846124d0565b8560021415610b325760405163573ade8160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063573ade8190610ada908890859088908890600401613a28565b602060405180830381600087803b158015610af457600080fd5b505af1158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c9190613a0f565b50610bd8565b60405163573ade8160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063573ade8190610b84908890859088908890600401613a28565b602060405180830381600087803b158015610b9e57600080fd5b505af1158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd69190613a0f565b505b505050505050565b610beb868686610c9f565b610bd886848484610dde565b610c0386868686610872565b610bd886838361224d565b610c178461193a565b610c2384848484610dde565b50505050565b610c3560038a8a610c9f565b610c4487878787878787610f1b565b505050505050505050565b610c57612448565b610c61600061253b565b565b610c6b612448565b610c6161258d565b610c7e858585610c9f565b6108418583836113a8565b610c9585858585610872565b6108418582612041565b6000610ca96124c1565b9050610cc06001600160a01b0384168230856124d0565b8360021415610d535760405163e8eda9df60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e8eda9df90610d1c90869086908690600090600401613a53565b600060405180830381600087803b158015610d3657600080fd5b505af1158015610d4a573d6000803e3d6000fd5b50505050610c23565b60405163617ba03760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063617ba03790610da690869086908690600090600401613a53565b600060405180830381600087803b158015610dc057600080fd5b505af1158015610dd4573d6000803e3d6000fd5b5050505050505050565b6000610de86124c1565b90508460021415610e7f5760405163a415bcad60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a415bcad90610e48908790879087906000908890600401613a80565b600060405180830381600087803b158015610e6257600080fd5b505af1158015610e76573d6000803e3d6000fd5b50505050610f07565b60405163a415bcad60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a415bcad90610ed4908790879087906000908890600401613a80565b600060405180830381600087803b158015610eee57600080fd5b505af1158015610f02573d6000803e3d6000fd5b505050505b6108416001600160a01b0385168285612956565b6000610f256124c1565b9050600087600114610f57577f0000000000000000000000000000000000000000000000000000000000000000610f79565b7f00000000000000000000000000000000000000000000000000000000000000005b60405163016a5aab60e31b81529091506001600160a01b03821690630b52d55890610fb490859030908c908c908c908c908c90600401613ab4565b600060405180830381600087803b158015610fce57600080fd5b505af1158015610fe2573d6000803e3d6000fd5b505060405163a415bcad60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016925063a415bcad915061105b907f0000000000000000000000000000000000000000000000000000000000000000908d908d906000908990600401613a80565b600060405180830381600087803b15801561107557600080fd5b505af1158015611089573d6000803e3d6000fd5b5050604051632e1a7d4d60e01b8152600481018c90527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169250632e1a7d4d9150602401600060405180830381600087803b1580156110ef57600080fd5b505af1158015611103573d6000803e3d6000fd5b50505050610c44828a61298b565b600061111b6124c1565b6040516334924edb60e21b81526001600160a01b038b8116600483015291925060009182917f00000000000000000000000000000000000000000000000000000000000000009091169063d2493b6c9060240160606040518083038186803b15801561118657600080fd5b505afa15801561119a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111be91906139c2565b92509250506000896001146111d357816111d5565b825b60405163016a5aab60e31b81529091506001600160a01b03821690630b52d5589061121090879030908e908e908e908e908e90600401613ab4565b600060405180830381600087803b15801561122a57600080fd5b505af115801561123e573d6000803e3d6000fd5b505060405163a415bcad60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016925063a415bcad9150611297908f908f908f906000908b90600401613a80565b600060405180830381600087803b1580156112b157600080fd5b505af11580156112c5573d6000803e3d6000fd5b506112de925050506001600160a01b038d16858d612956565b505050505050505050505050565b6112f6600361193a565b610dd48888888888888888611111565b60006113106124c1565b60405163d505accf60e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d505accf9061136b90849030908b908b908b908b908b90600401613ab4565b600060405180830381600087803b15801561138557600080fd5b505af1158015611399573d6000803e3d6000fd5b50505050610dd4888883612a3e565b60006113b26124c1565b905083600214156114695760405163a415bcad60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a415bcad90611432907f000000000000000000000000000000000000000000000000000000000000000090879087906000908890600401613a80565b600060405180830381600087803b15801561144c57600080fd5b505af1158015611460573d6000803e3d6000fd5b50505050611511565b60405163a415bcad60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a415bcad906114de907f000000000000000000000000000000000000000000000000000000000000000090879087906000908890600401613a80565b600060405180830381600087803b1580156114f857600080fd5b505af115801561150c573d6000803e3d6000fd5b505050505b604051632e1a7d4d60e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561157357600080fd5b505af1158015611587573d6000803e3d6000fd5b50505050610c23818461298b565b600061159f6124c1565b90508260001981141561167a57826001146115da577f00000000000000000000000000000000000000000000000000000000000000006115fc565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516370a0823160e01b81526001600160a01b03848116600483015291909116906370a082319060240160206040518083038186803b15801561163f57600080fd5b505afa158015611653573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116779190613a0f565b90505b803410156116df5760405162461bcd60e51b815260206004820152602760248201527f6d73672e76616c7565206973206c657373207468616e2072657061796d656e7460448201526608185b5bdd5b9d60ca1b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561173a57600080fd5b505af115801561174e573d6000803e3d6000fd5b508893506002925061175e915050565b141561182e5760405163573ade8160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063573ade81906117d6907f000000000000000000000000000000000000000000000000000000000000000090859088908890600401613a28565b602060405180830381600087803b1580156117f057600080fd5b505af1158015611804573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118289190613a0f565b506118f4565b60405163573ade8160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063573ade81906118a0907f000000000000000000000000000000000000000000000000000000000000000090859088908890600401613a28565b602060405180830381600087803b1580156118ba57600080fd5b505af11580156118ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f29190613a0f565b505b60006119008234613b0b565b90508015610bd857610bd8838261298b565b61191e60038b8b610c9f565b61192e8888888888888888611111565b50505050505050505050565b60006119446124c1565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156119a157600080fd5b505af11580156119b5573d6000803e3d6000fd5b50859350600292506119c5915050565b1415611a6c5760405163e8eda9df60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e8eda9df90611a3e907f00000000000000000000000000000000000000000000000000000000000000009034908690600090600401613a53565b600060405180830381600087803b158015611a5857600080fd5b505af1158015610bd8573d6000803e3d6000fd5b60405163617ba03760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063617ba03790611a3e907f00000000000000000000000000000000000000000000000000000000000000009034908690600090600401613a53565b5050565b606080600081817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611bb5577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b316ff896040518163ffffffff1660e01b815260040160006040518083038186803b158015611b7257600080fd5b505afa158015611b86573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bae9190810190613bb6565b9350835192505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611c80577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b316ff896040518163ffffffff1660e01b815260040160006040518083038186803b158015611c3d57600080fd5b505afa158015611c51573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c799190810190613bb6565b9150815190505b611c8a8184613d03565b67ffffffffffffffff811115611ca257611ca2613b22565b604051908082528060200260200182016040528015611cf857816020015b611ce56040805160608101909152806000815260606020820152600060409091015290565b815260200190600190039081611cc05790505b50945060005b83811015611deb576002868281518110611d1a57611d1a613d1b565b6020026020010151600001906003811115611d3757611d37613725565b90816003811115611d4a57611d4a613725565b81525050848181518110611d6057611d60613d1b565b602002602001015160000151868281518110611d7e57611d7e613d1b565b602002602001015160200181905250848181518110611d9f57611d9f613d1b565b602002602001015160200151868281518110611dbd57611dbd613d1b565b60209081029190910101516001600160a01b0390911660409091015280611de381613d31565b915050611cfe565b506000805b82811015611ee957611e028186613d03565b91506003878381518110611e1857611e18613d1b565b6020026020010151600001906003811115611e3557611e35613725565b90816003811115611e4857611e48613725565b81525050838181518110611e5e57611e5e613d1b565b602002602001015160000151878381518110611e7c57611e7c613d1b565b602002602001015160200181905250838181518110611e9d57611e9d613d1b565b602002602001015160200151878381518110611ebb57611ebb613d1b565b60209081029190910101516001600160a01b0390911660409091015280611ee181613d31565b915050611df0565b50505050505090565b611efe8a8a8a8a610872565b61192e8a878787878787611306565b600054610100900460ff1615808015611f2d5750600054600160ff909116105b80611f475750303b158015611f47575060005460ff166001145b611faa5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016116d6565b6000805460ff191660011790558015611fcd576000805461ff0019166101001790555b611fd5612d33565b606580546001600160a01b0319166001600160a01b038416179055611ff861258d565b8015611adf576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b611adf828261204e6124c1565b612a3e565b600061205d6124c1565b90506000896002141561210e576040516334924edb60e21b81526001600160a01b038a811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063d2493b6c9060240160606040518083038186803b1580156120cb57600080fd5b505afa1580156120df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210391906139c2565b509091506121ad9050565b6040516334924edb60e21b81526001600160a01b038a811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063d2493b6c9060240160606040518083038186803b15801561216f57600080fd5b505afa158015612183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121a791906139c2565b50909150505b60405163d505accf60e01b81526001600160a01b0382169063d505accf906121e590859030908c908c908c908c908c90600401613ab4565b600060405180830381600087803b1580156121ff57600080fd5b505af1158015612213573d6000803e3d6000fd5b5050505061192e8a8a8a8585612d62565b6122308b8b8b8b610872565b6122408b88888888888888612053565b5050505050505050505050565b60006122576124c1565b905060008460021415612308576040516334924edb60e21b81526001600160a01b0385811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063d2493b6c9060240160606040518083038186803b1580156122c557600080fd5b505afa1580156122d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122fd91906139c2565b509091506123a79050565b6040516334924edb60e21b81526001600160a01b0385811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063d2493b6c9060240160606040518083038186803b15801561236957600080fd5b505afa15801561237d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a191906139c2565b50909150505b6108418585858585612d62565b6123bc612448565b6001600160a01b0381166124215760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016116d6565b61242a8161253b565b50565b6124388a8a8a611595565b61192e8a88888888888888612053565b6124506124c1565b6001600160a01b031661246b6033546001600160a01b031690565b6001600160a01b031614610c615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016116d6565b60006124cb612ea7565b905090565b6040516001600160a01b0380851660248301528316604482015260648101829052610c239085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612edb565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316156127735760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d1946dbc6040518163ffffffff1660e01b815260040160006040518083038186803b15801561261757600080fd5b505afa15801561262b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526126539190810190613d4c565b905060005b815181101561277057600082828151811061267557612675613d1b565b6020908102919091010151604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301529192509082169063dd62ed3e9060440160206040518083038186803b1580156126eb57600080fd5b505afa1580156126ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127239190613a0f565b61275d5761275d6001600160a01b0382167f0000000000000000000000000000000000000000000000000000000000000000600019612fad565b508061276881613d31565b915050612658565b50505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610c615760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d1946dbc6040518163ffffffff1660e01b815260040160006040518083038186803b1580156127fd57600080fd5b505afa158015612811573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128399190810190613d4c565b905060005b8151811015611adf57600082828151811061285b5761285b613d1b565b6020908102919091010151604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301529192509082169063dd62ed3e9060440160206040518083038186803b1580156128d157600080fd5b505afa1580156128e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129099190613a0f565b612943576129436001600160a01b0382167f0000000000000000000000000000000000000000000000000000000000000000600019612fad565b508061294e81613d31565b91505061283e565b6040516001600160a01b03831660248201526044810182905261298690849063a9059cbb60e01b90606401612504565b505050565b604080516000808252602082019092526001600160a01b0384169083906040516129b59190613ddb565b60006040518083038185875af1925050503d80600081146129f2576040519150601f19603f3d011682016040523d82523d6000602084013e6129f7565b606091505b50509050806129865760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b60448201526064016116d6565b81600019811415612ae5576040516370a0823160e01b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015612aaa57600080fd5b505afa158015612abe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ae29190613a0f565b90505b612b1a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168330846124d0565b8360021415612beb57604051631a4ca37b60e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906369328dec90612b93907f00000000000000000000000000000000000000000000000000000000000000009085903090600401613df7565b602060405180830381600087803b158015612bad57600080fd5b505af1158015612bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612be59190613a0f565b50612caf565b604051631a4ca37b60e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906369328dec90612c5b907f00000000000000000000000000000000000000000000000000000000000000009085903090600401613df7565b602060405180830381600087803b158015612c7557600080fd5b505af1158015612c89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cad9190613a0f565b505b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015612d1157600080fd5b505af1158015612d25573d6000803e3d6000fd5b50505050610c23828261298b565b600054610100900460ff16612d5a5760405162461bcd60e51b81526004016116d690613e1a565b610c616130d1565b82600019811415612de9576040516370a0823160e01b81526001600160a01b0384811660048301528316906370a082319060240160206040518083038186803b158015612dae57600080fd5b505afa158015612dc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612de69190613a0f565b90505b612dfe6001600160a01b0383168430846124d0565b8560021415612e5757604051631a4ca37b60e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906369328dec90610ada90889085908890600401613df7565b604051631a4ca37b60e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906369328dec90610b8490889085908890600401613df7565b600060183610801590612ec457506065546001600160a01b031633145b15612ed6575060131936013560601c90565b503390565b6000612f30826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131089092919063ffffffff16565b8051909150156129865780806020019051810190612f4e9190613e65565b6129865760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016116d6565b8015806130365750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015612ffc57600080fd5b505afa158015613010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130349190613a0f565b155b6130a15760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016116d6565b6040516001600160a01b03831660248201526044810182905261298690849063095ea7b360e01b90606401612504565b600054610100900460ff166130f85760405162461bcd60e51b81526004016116d690613e1a565b610c616131036124c1565b61253b565b6060613117848460008561311f565b949350505050565b6060824710156131805760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016116d6565b600080866001600160a01b0316858760405161319c9190613ddb565b60006040518083038185875af1925050503d80600081146131d9576040519150601f19603f3d011682016040523d82523d6000602084013e6131de565b606091505b50915091506131ef878383876131fa565b979650505050505050565b6060831561326657825161325f576001600160a01b0385163b61325f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016116d6565b5081613117565b613117838381511561327b5781518083602001fd5b8060405162461bcd60e51b81526004016116d69190613466565b6001600160a01b038116811461242a57600080fd5b600080600080600060a086880312156132c257600080fd5b85359450602086013593506040860135925060608601356132e281613295565b949793965091946080013592915050565b60006020828403121561330557600080fd5b813561331081613295565b9392505050565b6000806000806080858703121561332d57600080fd5b84359350602085013561333f81613295565b93969395505050506040820135916060013590565b60008060008060008060c0878903121561336d57600080fd5b86359550602087013561337f81613295565b945060408701359350606087013561339681613295565b9598949750929560808101359460a0909101359350915050565b60008060008060008060c087890312156133c957600080fd5b8635955060208701356133db81613295565b9450604087013593506060870135925060808701356133f981613295565b8092505060a087013590509295509295509295565b60005b83811015613429578181015183820152602001613411565b83811115610c235750506000910152565b6000815180845261345281602086016020860161340e565b601f01601f19169290920160200192915050565b602081526000613310602083018461343a565b803560ff8116811461348a57600080fd5b919050565b60008060008060008060008060006101208a8c0312156134ae57600080fd5b89356134b981613295565b985060208a0135975060408a0135965060608a0135955060808a0135945060a08a013593506134ea60c08b01613479565b925060e08a013591506101008a013590509295985092959850929598565b600080600080600060a0868803121561352057600080fd5b85359450602086013561353281613295565b94979496505050506040830135926060810135926080909101359150565b60008060006060848603121561356557600080fd5b83359250602084013561357781613295565b929592945050506040919091013590565b600080600080600080600060e0888a0312156135a357600080fd5b873596506020880135955060408801359450606088013593506135c860808901613479565b925060a0880135915060c0880135905092959891949750929550565b600080600080600080600080610100898b03121561360157600080fd5b883561360c81613295565b97506020890135965060408901359550606089013594506080890135935061363660a08a01613479565b925060c0890135915060e089013590509295985092959890939650565b60008060006060848603121561366857600080fd5b505081359360208301359350604090920135919050565b6000806000806000806000806000806101408b8d03121561369f57600080fd5b8a356136aa81613295565b995060208b0135985060408b01356136c181613295565b975060608b0135965060808b0135955060a08b0135945060c08b013593506136eb60e08c01613479565b92506101008b013591506101208b013590509295989b9194979a5092959850565b60006020828403121561371e57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156137d657603f198a8503018652825160608151600480821061379657634e487b7160e01b865260218152602486fd5b508652818a01518a87018290526137af8288018261343a565b928a01516001600160a01b0316968a01969096525095880195935091870191600101613763565b50919998505050505050505050565b6000806000806000806000806000806101408b8d03121561380557600080fd5b8a35995060208b013561381781613295565b985060408b0135975060608b0135965060808b0135955060a08b0135945060c08b013593506136eb60e08c01613479565b6000806040838503121561385b57600080fd5b50508035926020909101359150565b600080600080600080600080610100898b03121561388757600080fd5b88359750602089013561389981613295565b965060408901359550606089013594506080890135935061363660a08a01613479565b60008060008060008060008060008060006101608c8e0312156138de57600080fd5b8b359a5060208c01356138f081613295565b995060408c0135985060608c0135975060808c013561390e81613295565b965060a08c0135955060c08c0135945060e08c013593506139326101008d01613479565b92506101208c013591506101408c013590509295989b509295989b9093969950565b6000806000806000806000806000806101408b8d03121561397457600080fd5b8a35995060208b0135985060408b0135975060608b013561399481613295565b965060808b0135955060a08b0135945060c08b013593506136eb60e08c01613479565b805161348a81613295565b6000806000606084860312156139d757600080fd5b83516139e281613295565b60208501519093506139f381613295565b6040850151909250613a0481613295565b809150509250925092565b600060208284031215613a2157600080fd5b5051919050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b6001600160a01b0395861681526020810194909452604084019290925261ffff166060830152909116608082015260a00190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b634e487b7160e01b600052601160045260246000fd5b600082821015613b1d57613b1d613af5565b500390565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715613b5b57613b5b613b22565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715613b8a57613b8a613b22565b604052919050565b600067ffffffffffffffff821115613bac57613bac613b22565b5060051b60200190565b60006020808385031215613bc957600080fd5b825167ffffffffffffffff80821115613be157600080fd5b818501915085601f830112613bf557600080fd5b8151613c08613c0382613b92565b613b61565b81815260059190911b83018401908481019088831115613c2757600080fd5b8585015b83811015613cf657805185811115613c435760008081fd5b86016040601f19828d038101821315613c5c5760008081fd5b613c64613b38565b8a84015189811115613c765760008081fd5b8401603f81018f13613c885760008081fd5b8b8101518a811115613c9c57613c9c613b22565b613cac8d85601f84011601613b61565b93508084528f85828401011115613cc35760008081fd5b613cd2818e860187850161340e565b5050818152613ce28385016139b7565b818c01528652505050918601918601613c2b565b5098975050505050505050565b60008219821115613d1657613d16613af5565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415613d4557613d45613af5565b5060010190565b60006020808385031215613d5f57600080fd5b825167ffffffffffffffff811115613d7657600080fd5b8301601f81018513613d8757600080fd5b8051613d95613c0382613b92565b81815260059190911b82018301908381019087831115613db457600080fd5b928401925b828410156131ef578351613dcc81613295565b82529284019290840190613db9565b60008251613ded81846020870161340e565b9190910192915050565b6001600160a01b0393841681526020810192909252909116604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215613e7757600080fd5b8151801515811461331057600080fdfea2646970667358221220c5c4da06ad305f8a31a692f3c0a22f7b56ae25c5b5a68f107dd625bd26e2949964736f6c63430008090033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approvePool()": {
        "notice": "If new assets are added into the pool, it needs to be called."
      },
      "borrow(uint256,address,uint256,uint256)": {
        "notice": "The user must approve the delegation to this SC for the asset's debtToken."
      },
      "borrowETHWithPermit(uint256,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "It works for only v3."
      },
      "borrowWithPermit(address,uint256,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "It works for only v3."
      },
      "isTrustedForwarder(address)": {
        "notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
      },
      "repay(uint256,address,uint256,uint256)": {
        "notice": "The user must approve this SC for the asset."
      },
      "supply(uint256,address,uint256)": {
        "notice": "The user must approve this SC for the asset."
      },
      "supplyAndBorrowETHWithPermit(address,uint256,uint256,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "It works for only v3."
      },
      "supplyAndBorrowWithPermit(address,uint256,address,uint256,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "It works for only v3."
      },
      "supplyETHAndBorrowWithPermit(address,uint256,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "It works for only v3."
      },
      "withdraw(uint256,address,uint256)": {
        "notice": "The user must approve this SC for the asset's aToken."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 169,
        "contract": "contracts/AaveAdapter.sol:AaveAdapter",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 172,
        "contract": "contracts/AaveAdapter.sol:AaveAdapter",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1051,
        "contract": "contracts/AaveAdapter.sol:AaveAdapter",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 41,
        "contract": "contracts/AaveAdapter.sol:AaveAdapter",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 161,
        "contract": "contracts/AaveAdapter.sol:AaveAdapter",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3995,
        "contract": "contracts/AaveAdapter.sol:AaveAdapter",
        "label": "trustedForwarder",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}